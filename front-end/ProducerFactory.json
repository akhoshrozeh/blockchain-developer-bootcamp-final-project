{
  "contractName": "ProducerFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ProducerCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prodAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createProducer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProducers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prodAddr",
          "type": "address"
        }
      ],
      "name": "getProducer",
      "outputs": [
        {
          "internalType": "contract Producer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_producer",
          "type": "address"
        }
      ],
      "name": "producerExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getOwnersContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ProducerCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createProducer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getOwnersContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prodAddr\",\"type\":\"address\"}],\"name\":\"getProducer\",\"outputs\":[{\"internalType\":\"contract Producer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProducers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prodAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_producer\",\"type\":\"address\"}],\"name\":\"producerExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Anthony Khoshrozeh\",\"events\":{\"ProducerCreated(address)\":{\"params\":{\"owner\":\"The owner of the contract\"}}},\"kind\":\"dev\",\"methods\":{\"createProducer(string)\":{\"params\":{\"_name\":\"The name of the Producer; equivalent to the artist's name\"},\"returns\":{\"_0\":\"Returns the address of the Producer contract created\"}},\"getOwnersContract(address)\":{\"params\":{\"_owner\":\"The user's EOA address\"}},\"getProducer(address)\":{\"params\":{\"_prodAddr\":\"The user's EOA address\"}},\"producerExists(address)\":{\"params\":{\"_producer\":\"The user's EOA address\"}}},\"title\":\"A contract to get create and retrieve 'Producers'\",\"version\":1},\"userdoc\":{\"events\":{\"ProducerCreated(address)\":{\"notice\":\"You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts\"}},\"kind\":\"user\",\"methods\":{\"createProducer(string)\":{\"notice\":\"Creates the Producer contract and stores its address and txn receipt\"},\"getOwnersContract(address)\":{\"notice\":\"Given an EOA address, it returns the corresponding Producer contract address\"},\"getProducer(address)\":{\"notice\":\"Given an EOA address, it returns the corresponding Producer contract creation receipt\"},\"getProducers()\":{\"notice\":\"Returns the list of all Producer contract addresses\"},\"prodAddresses(uint256)\":{\"notice\":\"This array contains all contract addresses of 'Producers'\"},\"producerExists(address)\":{\"notice\":\"Returns true if this account has already created an address; false if they haven't\"}},\"notice\":\"You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ProducerFactory.sol\":\"ProducerFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Producer.sol\":{\"keccak256\":\"0x8f1f179aef9b3e42d5041ecb1cb81ec87242092fcd0dce4a3d354ec235461118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://759c866e17365179d3fb105d0bb1afbe5362b08ddc62f23459a985d1190676a9\",\"dweb:/ipfs/QmQJAZyTqZDUPWCBaD5AeobcTQDU7ttDsteFftQKGoZ1k2\"]},\"project:/contracts/ProducerFactory.sol\":{\"keccak256\":\"0x274dd61be0d467cf4835f5912e232ba11ea580c3aa810ebad9dbabb987cb4c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31cf95d0c479d3559bb2fa32bb92576cfca47fa98a5db65ddd38dfefa9fe5873\",\"dweb:/ipfs/QmP5ZrGaNKQcF8m2WJhgDoWa1EDKbtPLMfWbA4pvGzJRPh\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10046:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:4",
                "type": ""
              }
            ],
            "src": "466:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:4",
                "type": ""
              }
            ],
            "src": "568:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:4",
                "type": ""
              }
            ],
            "src": "696:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:4",
                "type": ""
              }
            ],
            "src": "841:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1208:28:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1218:12:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1225:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1218:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1194:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1204:3:4",
                "type": ""
              }
            ],
            "src": "1176:60:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1302:82:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1312:66:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1370:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1352:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1352:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1343:8:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1343:34:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1325:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1325:53:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1312:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1282:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1292:9:4",
                "type": ""
              }
            ],
            "src": "1242:142:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1458:66:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1468:50:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1512:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1481:30:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1481:37:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1468:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1438:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1448:9:4",
                "type": ""
              }
            ],
            "src": "1390:134:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1614:74:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1624:58:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1676:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1637:38:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1637:45:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1624:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Producer_$594_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1594:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1604:9:4",
                "type": ""
              }
            ],
            "src": "1530:158:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1783:90:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1800:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1860:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Producer_$594_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1805:54:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1805:61:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1793:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:74:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1793:74:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Producer_$594_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1771:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1778:3:4",
                "type": ""
              }
            ],
            "src": "1694:179:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2001:148:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2011:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2023:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2034:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2019:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2011:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2115:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2128:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2139:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2124:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2124:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Producer_$594_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2047:67:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2047:95:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2047:95:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Producer_$594__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1973:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1985:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1996:4:4",
                "type": ""
              }
            ],
            "src": "1879:270:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2200:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2210:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2221:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2210:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2182:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2192:7:4",
                "type": ""
              }
            ],
            "src": "2155:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2281:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2338:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2347:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2350:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2340:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2340:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2340:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2304:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2329:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2311:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2311:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2301:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2301:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2291:63:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2274:5:4",
                "type": ""
              }
            ],
            "src": "2238:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2418:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2428:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2450:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2437:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2437:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2428:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2493:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2466:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2466:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2396:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2404:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2412:5:4",
                "type": ""
              }
            ],
            "src": "2366:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2577:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2623:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2625:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2625:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2625:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2598:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2607:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2594:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2594:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2619:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2590:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2590:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2587:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2716:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2731:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2745:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2735:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2760:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2795:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2806:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2791:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2791:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2815:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2770:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2770:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2760:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2547:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2558:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2570:6:4",
                "type": ""
              }
            ],
            "src": "2511:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2911:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2928:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2951:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2933:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2933:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2921:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2921:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2921:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2899:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2906:3:4",
                "type": ""
              }
            ],
            "src": "2846:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3068:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3078:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3090:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3101:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3086:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3086:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3078:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3158:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3171:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3182:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3167:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3167:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3114:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3114:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3114:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3040:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3052:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3063:4:4",
                "type": ""
              }
            ],
            "src": "2970:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3287:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3304:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3307:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3297:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3297:12:4"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "3198:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3410:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3427:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3430:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3420:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3420:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3420:12:4"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "3321:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3492:54:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3502:38:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3520:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3527:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3516:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3516:14:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3536:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3532:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3532:7:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3512:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3512:28:4"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3502:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3475:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3485:6:4",
                "type": ""
              }
            ],
            "src": "3444:102:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3580:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3597:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3600:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3590:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3590:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3590:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3694:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3697:4:4",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3687:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3687:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3687:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3718:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3721:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3711:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3711:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3711:15:4"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3552:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3781:238:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3791:58:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3813:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "3843:4:4"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3821:21:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3821:27:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3809:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3809:40:4"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3795:10:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3960:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3962:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3962:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3962:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3903:10:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3915:18:4",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3900:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3900:34:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3939:10:4"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3951:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3936:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3936:22:4"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3897:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3897:62:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3894:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3998:2:4",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4002:10:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3991:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3991:22:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3991:22:4"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3767:6:4",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "3775:4:4",
                "type": ""
              }
            ],
            "src": "3738:281:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4066:88:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4076:30:4",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "4086:18:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4086:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "4076:6:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4135:6:4"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "4143:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "4115:19:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4115:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4115:33:4"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4050:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4059:6:4",
                "type": ""
              }
            ],
            "src": "4025:129:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4227:241:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4332:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4334:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4334:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4334:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4304:6:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4312:18:4",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4301:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:30:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4298:56:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4364:37:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4394:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "4372:21:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4372:29:4"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "4364:4:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4438:23:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "4450:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4456:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4446:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4446:15:4"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "4438:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4211:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4222:4:4",
                "type": ""
              }
            ],
            "src": "4160:308:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4525:103:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "4548:3:4"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "4553:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4558:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "4535:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4535:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4535:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "4606:3:4"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4611:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4602:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4602:16:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4620:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4595:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4595:27:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4595:27:4"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4507:3:4",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4512:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4517:6:4",
                "type": ""
              }
            ],
            "src": "4474:154:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4718:328:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4728:75:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4795:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4753:41:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4753:49:4"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4737:15:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4737:66:4"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "4728:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "4819:5:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4826:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4812:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4812:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4812:21:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4842:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "4857:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4864:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4853:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4853:16:4"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "4846:3:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4907:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "4909:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4909:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4909:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "4888:3:4"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4893:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4884:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4884:16:4"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "4902:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4881:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4881:25:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4878:112:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "5023:3:4"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "5028:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5033:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4999:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:41:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4999:41:4"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4691:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4696:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4704:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "4712:5:4",
                "type": ""
              }
            ],
            "src": "4634:412:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5128:278:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5177:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "5179:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5179:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5179:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5156:6:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5164:4:4",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5152:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5152:17:4"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5171:3:4"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5148:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5148:27:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5141:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5141:35:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5138:122:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5269:34:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5296:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5283:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5283:20:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5273:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5312:88:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5373:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5381:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5369:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5369:17:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5388:6:4"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5396:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5321:47:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5321:79:4"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "5312:5:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5106:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5114:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "5122:5:4",
                "type": ""
              }
            ],
            "src": "5066:340:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5488:433:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5534:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5536:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5536:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5536:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5509:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5518:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5505:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5505:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5530:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5501:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5501:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5498:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5627:287:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5642:45:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5673:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5684:1:4",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5669:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5669:17:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5656:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5656:31:4"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5646:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5734:83:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "5736:77:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5736:79:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5736:79:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5706:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5714:18:4",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5703:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5703:30:4"
                      },
                      "nodeType": "YulIf",
                      "src": "5700:117:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5831:73:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5876:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5887:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5872:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5872:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5896:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "5841:30:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5841:63:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5831:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5458:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5469:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5481:6:4",
                "type": ""
              }
            ],
            "src": "5412:509:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6001:40:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6012:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6028:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6022:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6012:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5984:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5994:6:4",
                "type": ""
              }
            ],
            "src": "5927:114:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6158:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6175:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6180:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6168:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6168:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6168:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6196:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6215:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6220:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6211:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6211:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6196:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6130:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6135:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6146:11:4",
                "type": ""
              }
            ],
            "src": "6047:184:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6309:60:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6319:11:4",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "6327:3:4"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "6319:4:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6340:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "6352:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6357:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6348:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6348:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "6340:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "6296:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6304:4:4",
                "type": ""
              }
            ],
            "src": "6237:132:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6430:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6447:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6470:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6452:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6452:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6440:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6440:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6440:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6418:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6425:3:4",
                "type": ""
              }
            ],
            "src": "6375:108:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6569:99:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6613:6:4"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6621:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6579:33:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6579:46:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6579:46:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6634:28:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6652:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6657:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6648:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6648:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "6634:10:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6542:6:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6550:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "6558:10:4",
                "type": ""
              }
            ],
            "src": "6489:179:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6749:38:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6759:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "6771:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6776:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6767:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6767:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "6759:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "6736:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "6744:4:4",
                "type": ""
              }
            ],
            "src": "6674:113:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6947:608:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6957:68:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7019:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6971:47:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6971:54:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6961:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7034:93:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7115:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7120:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7041:73:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7041:86:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7034:3:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7136:71:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7201:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "7151:49:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7151:56:4"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "7140:7:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7216:21:4",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "7230:7:4"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "7220:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7306:224:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7320:34:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "7347:6:4"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7341:5:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7341:13:4"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "7324:13:4",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7367:70:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "7418:13:4"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "7433:3:4"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "7374:43:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7374:63:4"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7367:3:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7450:70:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "7513:6:4"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "7460:52:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7460:60:4"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7450:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7268:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7271:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7265:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7265:13:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7279:18:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7281:14:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7290:1:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7293:1:4",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7286:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7286:9:4"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7281:1:4"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7250:14:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7252:10:4",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7261:1:4",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "7256:1:4",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "7246:284:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7539:10:4",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7546:3:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7539:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6926:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6933:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6942:3:4",
                "type": ""
              }
            ],
            "src": "6823:732:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7709:225:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7719:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7731:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7742:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7727:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7727:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7719:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7766:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7777:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7762:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7762:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7785:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7791:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7781:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7781:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7755:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7755:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7755:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7811:116:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7913:6:4"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7922:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7819:93:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7819:108:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7811:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7681:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7693:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7704:4:4",
                "type": ""
              }
            ],
            "src": "7561:373:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7982:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7992:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8017:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8010:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8010:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8003:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8003:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7992:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7964:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7974:7:4",
                "type": ""
              }
            ],
            "src": "7940:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8095:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8112:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8132:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "8117:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8117:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8105:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8105:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8105:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8083:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8090:3:4",
                "type": ""
              }
            ],
            "src": "8036:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8243:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8253:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8265:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8276:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8261:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8261:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8253:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8327:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8340:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8351:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8336:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8336:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8289:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8289:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8289:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8215:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8227:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8238:4:4",
                "type": ""
              }
            ],
            "src": "8151:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8426:40:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8437:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8453:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8447:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8447:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8437:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8409:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8419:6:4",
                "type": ""
              }
            ],
            "src": "8367:99:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8568:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8585:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8590:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8578:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8578:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8578:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8606:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8625:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8630:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8621:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8621:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8606:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8540:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8545:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8556:11:4",
                "type": ""
              }
            ],
            "src": "8472:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8696:258:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8706:10:4",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8715:1:4",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8710:1:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8775:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8800:3:4"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8805:1:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8796:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8796:11:4"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8819:3:4"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8824:1:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8815:3:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8815:11:4"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8809:5:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8809:18:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8789:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8789:39:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8789:39:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8736:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8739:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8733:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8733:13:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8747:19:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8749:15:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8758:1:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8761:2:4",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8754:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8754:10:4"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8749:1:4"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8729:3:4",
                    "statements": []
                  },
                  "src": "8725:113:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8872:76:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8922:3:4"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8927:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8918:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8918:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8936:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8911:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8911:27:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8911:27:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8853:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8856:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8850:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8850:13:4"
                  },
                  "nodeType": "YulIf",
                  "src": "8847:101:4"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8678:3:4",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8683:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8688:6:4",
                "type": ""
              }
            ],
            "src": "8647:307:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9052:272:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9062:53:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9109:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "9076:32:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9076:39:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9066:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9124:78:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9190:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9195:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9131:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9131:71:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9124:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9237:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9244:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9233:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9233:16:4"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9251:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9256:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9211:21:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9211:52:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9211:52:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9272:46:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9283:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9310:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "9288:21:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9288:29:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9279:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9279:39:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9272:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9033:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9040:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9048:3:4",
                "type": ""
              }
            ],
            "src": "8960:364:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9383:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9393:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9422:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9404:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9404:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9393:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9365:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9375:7:4",
                "type": ""
              }
            ],
            "src": "9330:104:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9521:61:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9538:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9569:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "9543:25:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9543:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9531:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9531:45:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9531:45:4"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9509:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9516:3:4",
                "type": ""
              }
            ],
            "src": "9440:142:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9750:293:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9760:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9772:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9783:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9768:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9768:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9760:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9807:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9818:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9803:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9803:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9826:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9832:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9822:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9822:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9796:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9796:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9796:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9852:86:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9924:6:4"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9933:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9860:63:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9860:78:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9852:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10008:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10021:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10032:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10017:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10017:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9948:59:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9948:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9948:88:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address_payable__to_t_string_memory_ptr_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9714:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9726:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9734:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9745:4:4",
                "type": ""
              }
            ],
            "src": "9588:455:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Producer_$594_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_address_payable(value)\n    }\n\n    function abi_encode_t_contract$_Producer_$594_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Producer_$594_to_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Producer_$594__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Producer_$594_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_payable__to_t_string_memory_ptr_t_address_payable__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "290:2307:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "290:2307:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1936:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;422:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1182:425;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1681:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2209:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2474:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1936:120;1996:8;2023:15;:26;2039:9;2023:26;;;;;;;;;;;;;;;;;;;;;;;;;2016:33;;1936:120;;;:::o;422:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1182:425::-;1256:7;919:5;886:38;;:17;:29;904:10;886:29;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;878:47;;;;;;1274:10:::1;1300:5;1315:10;1287:40;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1274:53;;1367:1;1337:15;:27;1353:10;1337:27;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1416:1;1378:15;:27;1394:10;1378:27;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1428:13;1455:1;1428:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1468:9;1483:1;1468:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:4;1495:17;:29;1513:10;1495:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1546:27;1562:10;1546:27;;;;;;:::i;:::-;;;;;;;;1598:1;1583:17;;;1182:425:::0;;;:::o;1681:99::-;1725:16;1760:13;1753:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1681:99;:::o;2209:121::-;2272:4;2295:17;:28;2313:9;2295:28;;;;;;;;;;;;;;;;;;;;;;;;;2288:35;;2209:121;;;:::o;2474:119::-;2537:7;2563:15;:23;2579:6;2563:23;;;;;;;;;;;;;;;;;;;;;;;;;2556:30;;2474:119;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:60::-;1204:3;1225:5;1218:12;;1176:60;;;:::o;1242:142::-;1292:9;1325:53;1343:34;1352:24;1370:5;1352:24;:::i;:::-;1343:34;:::i;:::-;1325:53;:::i;:::-;1312:66;;1242:142;;;:::o;1390:134::-;1448:9;1481:37;1512:5;1481:37;:::i;:::-;1468:50;;1390:134;;;:::o;1530:158::-;1604:9;1637:45;1676:5;1637:45;:::i;:::-;1624:58;;1530:158;;;:::o;1694:179::-;1805:61;1860:5;1805:61;:::i;:::-;1800:3;1793:74;1694:179;;:::o;1879:270::-;1996:4;2034:2;2023:9;2019:18;2011:26;;2047:95;2139:1;2128:9;2124:17;2115:6;2047:95;:::i;:::-;1879:270;;;;:::o;2155:77::-;2192:7;2221:5;2210:16;;2155:77;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:329::-;2570:6;2619:2;2607:9;2598:7;2594:23;2590:32;2587:119;;;2625:79;;:::i;:::-;2587:119;2745:1;2770:53;2815:7;2806:6;2795:9;2791:22;2770:53;:::i;:::-;2760:63;;2716:117;2511:329;;;;:::o;2846:118::-;2933:24;2951:5;2933:24;:::i;:::-;2928:3;2921:37;2846:118;;:::o;2970:222::-;3063:4;3101:2;3090:9;3086:18;3078:26;;3114:71;3182:1;3171:9;3167:17;3158:6;3114:71;:::i;:::-;2970:222;;;;:::o;3198:117::-;3307:1;3304;3297:12;3321:117;3430:1;3427;3420:12;3444:102;3485:6;3536:2;3532:7;3527:2;3520:5;3516:14;3512:28;3502:38;;3444:102;;;:::o;3552:180::-;3600:77;3597:1;3590:88;3697:4;3694:1;3687:15;3721:4;3718:1;3711:15;3738:281;3821:27;3843:4;3821:27;:::i;:::-;3813:6;3809:40;3951:6;3939:10;3936:22;3915:18;3903:10;3900:34;3897:62;3894:88;;;3962:18;;:::i;:::-;3894:88;4002:10;3998:2;3991:22;3781:238;3738:281;;:::o;4025:129::-;4059:6;4086:20;;:::i;:::-;4076:30;;4115:33;4143:4;4135:6;4115:33;:::i;:::-;4025:129;;;:::o;4160:308::-;4222:4;4312:18;4304:6;4301:30;4298:56;;;4334:18;;:::i;:::-;4298:56;4372:29;4394:6;4372:29;:::i;:::-;4364:37;;4456:4;4450;4446:15;4438:23;;4160:308;;;:::o;4474:154::-;4558:6;4553:3;4548;4535:30;4620:1;4611:6;4606:3;4602:16;4595:27;4474:154;;;:::o;4634:412::-;4712:5;4737:66;4753:49;4795:6;4753:49;:::i;:::-;4737:66;:::i;:::-;4728:75;;4826:6;4819:5;4812:21;4864:4;4857:5;4853:16;4902:3;4893:6;4888:3;4884:16;4881:25;4878:112;;;4909:79;;:::i;:::-;4878:112;4999:41;5033:6;5028:3;5023;4999:41;:::i;:::-;4718:328;4634:412;;;;;:::o;5066:340::-;5122:5;5171:3;5164:4;5156:6;5152:17;5148:27;5138:122;;5179:79;;:::i;:::-;5138:122;5296:6;5283:20;5321:79;5396:3;5388:6;5381:4;5373:6;5369:17;5321:79;:::i;:::-;5312:88;;5128:278;5066:340;;;;:::o;5412:509::-;5481:6;5530:2;5518:9;5509:7;5505:23;5501:32;5498:119;;;5536:79;;:::i;:::-;5498:119;5684:1;5673:9;5669:17;5656:31;5714:18;5706:6;5703:30;5700:117;;;5736:79;;:::i;:::-;5700:117;5841:63;5896:7;5887:6;5876:9;5872:22;5841:63;:::i;:::-;5831:73;;5627:287;5412:509;;;;:::o;5927:114::-;5994:6;6028:5;6022:12;6012:22;;5927:114;;;:::o;6047:184::-;6146:11;6180:6;6175:3;6168:19;6220:4;6215:3;6211:14;6196:29;;6047:184;;;;:::o;6237:132::-;6304:4;6327:3;6319:11;;6357:4;6352:3;6348:14;6340:22;;6237:132;;;:::o;6375:108::-;6452:24;6470:5;6452:24;:::i;:::-;6447:3;6440:37;6375:108;;:::o;6489:179::-;6558:10;6579:46;6621:3;6613:6;6579:46;:::i;:::-;6657:4;6652:3;6648:14;6634:28;;6489:179;;;;:::o;6674:113::-;6744:4;6776;6771:3;6767:14;6759:22;;6674:113;;;:::o;6823:732::-;6942:3;6971:54;7019:5;6971:54;:::i;:::-;7041:86;7120:6;7115:3;7041:86;:::i;:::-;7034:93;;7151:56;7201:5;7151:56;:::i;:::-;7230:7;7261:1;7246:284;7271:6;7268:1;7265:13;7246:284;;;7347:6;7341:13;7374:63;7433:3;7418:13;7374:63;:::i;:::-;7367:70;;7460:60;7513:6;7460:60;:::i;:::-;7450:70;;7306:224;7293:1;7290;7286:9;7281:14;;7246:284;;;7250:14;7546:3;7539:10;;6947:608;;;6823:732;;;;:::o;7561:373::-;7704:4;7742:2;7731:9;7727:18;7719:26;;7791:9;7785:4;7781:20;7777:1;7766:9;7762:17;7755:47;7819:108;7922:4;7913:6;7819:108;:::i;:::-;7811:116;;7561:373;;;;:::o;7940:90::-;7974:7;8017:5;8010:13;8003:21;7992:32;;7940:90;;;:::o;8036:109::-;8117:21;8132:5;8117:21;:::i;:::-;8112:3;8105:34;8036:109;;:::o;8151:210::-;8238:4;8276:2;8265:9;8261:18;8253:26;;8289:65;8351:1;8340:9;8336:17;8327:6;8289:65;:::i;:::-;8151:210;;;;:::o;8367:99::-;8419:6;8453:5;8447:12;8437:22;;8367:99;;;:::o;8472:169::-;8556:11;8590:6;8585:3;8578:19;8630:4;8625:3;8621:14;8606:29;;8472:169;;;;:::o;8647:307::-;8715:1;8725:113;8739:6;8736:1;8733:13;8725:113;;;8824:1;8819:3;8815:11;8809:18;8805:1;8800:3;8796:11;8789:39;8761:2;8758:1;8754:10;8749:15;;8725:113;;;8856:6;8853:1;8850:13;8847:101;;;8936:1;8927:6;8922:3;8918:16;8911:27;8847:101;8696:258;8647:307;;;:::o;8960:364::-;9048:3;9076:39;9109:5;9076:39;:::i;:::-;9131:71;9195:6;9190:3;9131:71;:::i;:::-;9124:78;;9211:52;9256:6;9251:3;9244:4;9237:5;9233:16;9211:52;:::i;:::-;9288:29;9310:6;9288:29;:::i;:::-;9283:3;9279:39;9272:46;;9052:272;8960:364;;;;:::o;9330:104::-;9375:7;9404:24;9422:5;9404:24;:::i;:::-;9393:35;;9330:104;;;:::o;9440:142::-;9543:32;9569:5;9543:32;:::i;:::-;9538:3;9531:45;9440:142;;:::o;9588:455::-;9745:4;9783:2;9772:9;9768:18;9760:26;;9832:9;9826:4;9822:20;9818:1;9807:9;9803:17;9796:47;9860:78;9933:4;9924:6;9860:78;:::i;:::-;9852:86;;9948:88;10032:2;10021:9;10017:18;10008:6;9948:88;:::i;:::-;9588:455;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\nimport './Producer.sol';\n\n/// @title A contract to get create and retrieve 'Producers'\n/// @author Anthony Khoshrozeh\n/// @notice You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts\ncontract ProducerFactory {\n    Producer[] producers;\n\n    /// @notice This array contains all contract addresses of 'Producers'\n    address[] public prodAddresses;\n\n    mapping (address => Producer) private addressToProdID;\n    mapping (address => bool) private producerExistsMap;\n    mapping (address => address) private ownerToContract;\n\n    /// @param owner The owner of the contract\n    /// @notice You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts\n    event ProducerCreated(address owner);\n\n    modifier isNotProducer() {\n        require(producerExistsMap[msg.sender] == false);\n        _;\n    }\n\n    /// @param _name The name of the Producer; equivalent to the artist's name\n    /// @notice Creates the Producer contract and stores its address and txn receipt\n    /// @return Returns the address of the Producer contract created\n    function createProducer(string memory _name) public isNotProducer returns(address){\n        Producer p = new Producer(_name, payable(msg.sender));\n        addressToProdID[msg.sender] = p;\n        ownerToContract[msg.sender] = address(p);\n        prodAddresses.push(address(p));\n        producers.push(p);\n        producerExistsMap[msg.sender] = true;\n        emit ProducerCreated(msg.sender);\n        return address(p);\n    }\n\n    /// @notice Returns the list of all Producer contract addresses\n    function getProducers() public view returns(address[] memory) {\n        return prodAddresses;\n    }\n\n    /// @param _prodAddr The user's EOA address\n    /// @notice Given an EOA address, it returns the corresponding Producer contract creation receipt\n    function getProducer(address _prodAddr) public view returns(Producer) {\n        return addressToProdID[_prodAddr];\n    }\n\n    /// @param _producer The user's EOA address\n    /// @notice Returns true if this account has already created an address; false if they haven't\n    function producerExists(address _producer) public view returns(bool) {\n        return producerExistsMap[_producer];\n    }\n\n    /// @param _owner The user's EOA address\n    /// @notice Given an EOA address, it returns the corresponding Producer contract address\n    function getOwnersContract(address _owner) public view returns(address) {\n        return ownerToContract[_owner];\n    }\n\n\n}",
  "sourcePath": "/Users/akhoshrozeh/Projects/consensys21/blockchain-developer-bootcamp-final-project/truffle/contracts/ProducerFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/ProducerFactory.sol",
    "exportedSymbols": {
      "Context": [
        126
      ],
      "Ownable": [
        104
      ],
      "Producer": [
        594
      ],
      "ProducerFactory": [
        762
      ]
    },
    "id": 763,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 596,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "project:/contracts/Producer.sol",
        "file": "./Producer.sol",
        "id": 597,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 763,
        "sourceUnit": 595,
        "src": "57:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ProducerFactory",
        "contractDependencies": [
          594
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 598,
          "nodeType": "StructuredDocumentation",
          "src": "83:207:3",
          "text": "@title A contract to get create and retrieve 'Producers'\n @author Anthony Khoshrozeh\n @notice You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts"
        },
        "fullyImplemented": true,
        "id": 762,
        "linearizedBaseContracts": [
          762
        ],
        "name": "ProducerFactory",
        "nameLocation": "299:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 602,
            "mutability": "mutable",
            "name": "producers",
            "nameLocation": "332:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "321:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Producer_$594_$dyn_storage",
              "typeString": "contract Producer[]"
            },
            "typeName": {
              "baseType": {
                "id": 600,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 599,
                  "name": "Producer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 594,
                  "src": "321:8:3"
                },
                "referencedDeclaration": 594,
                "src": "321:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Producer_$594",
                  "typeString": "contract Producer"
                }
              },
              "id": 601,
              "nodeType": "ArrayTypeName",
              "src": "321:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Producer_$594_$dyn_storage_ptr",
                "typeString": "contract Producer[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 603,
              "nodeType": "StructuredDocumentation",
              "src": "348:69:3",
              "text": "@notice This array contains all contract addresses of 'Producers'"
            },
            "functionSelector": "bf78e36f",
            "id": 606,
            "mutability": "mutable",
            "name": "prodAddresses",
            "nameLocation": "439:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "422:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 604,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "422:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 605,
              "nodeType": "ArrayTypeName",
              "src": "422:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 611,
            "mutability": "mutable",
            "name": "addressToProdID",
            "nameLocation": "497:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "459:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Producer_$594_$",
              "typeString": "mapping(address => contract Producer)"
            },
            "typeName": {
              "id": 610,
              "keyType": {
                "id": 607,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "468:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "459:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Producer_$594_$",
                "typeString": "mapping(address => contract Producer)"
              },
              "valueType": {
                "id": 609,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 608,
                  "name": "Producer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 594,
                  "src": "479:8:3"
                },
                "referencedDeclaration": 594,
                "src": "479:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Producer_$594",
                  "typeString": "contract Producer"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 615,
            "mutability": "mutable",
            "name": "producerExistsMap",
            "nameLocation": "552:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "518:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 614,
              "keyType": {
                "id": 612,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "518:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 613,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "538:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 619,
            "mutability": "mutable",
            "name": "ownerToContract",
            "nameLocation": "612:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "575:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 618,
              "keyType": {
                "id": 616,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "584:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "575:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 617,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "595:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 620,
              "nodeType": "StructuredDocumentation",
              "src": "634:161:3",
              "text": "@param owner The owner of the contract\n @notice You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts"
            },
            "id": 624,
            "name": "ProducerCreated",
            "nameLocation": "806:15:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "830:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "822:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:15:3"
            },
            "src": "800:37:3"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "868:75:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 627,
                            "name": "producerExistsMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "886:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 630,
                          "indexExpression": {
                            "expression": {
                              "id": 628,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "904:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "904:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "886:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "919:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "886:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "878:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "878:47:3"
                },
                {
                  "id": 635,
                  "nodeType": "PlaceholderStatement",
                  "src": "935:1:3"
                }
              ]
            },
            "id": 637,
            "name": "isNotProducer",
            "nameLocation": "852:13:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:3"
            },
            "src": "843:100:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 710,
              "nodeType": "Block",
              "src": "1264:343:3",
              "statements": [
                {
                  "assignments": [
                    649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 649,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "1283:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 710,
                      "src": "1274:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Producer_$594",
                        "typeString": "contract Producer"
                      },
                      "typeName": {
                        "id": 648,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 647,
                          "name": "Producer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 594,
                          "src": "1274:8:3"
                        },
                        "referencedDeclaration": 594,
                        "src": "1274:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 660,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 653,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "1300:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 656,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1315:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1315:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1307:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 654,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1307:8:3",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1307:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1287:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_payable_$returns$_t_contract$_Producer_$594_$",
                        "typeString": "function (string memory,address payable) returns (contract Producer)"
                      },
                      "typeName": {
                        "id": 651,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 650,
                          "name": "Producer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 594,
                          "src": "1291:8:3"
                        },
                        "referencedDeclaration": 594,
                        "src": "1291:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Producer_$594",
                      "typeString": "contract Producer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1274:53:3"
                },
                {
                  "expression": {
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 661,
                        "name": "addressToProdID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "1337:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Producer_$594_$",
                          "typeString": "mapping(address => contract Producer)"
                        }
                      },
                      "id": 664,
                      "indexExpression": {
                        "expression": {
                          "id": 662,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1353:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1353:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1337:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Producer_$594",
                        "typeString": "contract Producer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 665,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "1367:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Producer_$594",
                        "typeString": "contract Producer"
                      }
                    },
                    "src": "1337:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Producer_$594",
                      "typeString": "contract Producer"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:31:3"
                },
                {
                  "expression": {
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 668,
                        "name": "ownerToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "1378:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 671,
                      "indexExpression": {
                        "expression": {
                          "id": 669,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1394:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1394:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1378:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 674,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 649,
                          "src": "1416:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Producer_$594",
                            "typeString": "contract Producer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Producer_$594",
                            "typeString": "contract Producer"
                          }
                        ],
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1408:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1408:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1408:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1378:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:40:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 683,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "1455:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Producer_$594",
                              "typeString": "contract Producer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Producer_$594",
                              "typeString": "contract Producer"
                            }
                          ],
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1447:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1447:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1447:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 678,
                        "name": "prodAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "1428:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1428:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 690,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "1483:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      ],
                      "expression": {
                        "id": 687,
                        "name": "producers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1468:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Producer_$594_$dyn_storage",
                          "typeString": "contract Producer[] storage ref"
                        }
                      },
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1468:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Producer_$594_$dyn_storage_ptr_$_t_contract$_Producer_$594_$returns$__$bound_to$_t_array$_t_contract$_Producer_$594_$dyn_storage_ptr_$",
                        "typeString": "function (contract Producer[] storage pointer,contract Producer)"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1468:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "1468:17:3"
                },
                {
                  "expression": {
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 693,
                        "name": "producerExistsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1495:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 696,
                      "indexExpression": {
                        "expression": {
                          "id": 694,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1513:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1513:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1495:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1527:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1495:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "1495:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 701,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1562:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1562:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 700,
                      "name": "ProducerCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 624,
                      "src": "1546:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "EmitStatement",
                  "src": "1541:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 707,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "1598:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      ],
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1590:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1590:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 709,
                  "nodeType": "Return",
                  "src": "1583:17:3"
                }
              ]
            },
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "949:228:3",
              "text": "@param _name The name of the Producer; equivalent to the artist's name\n @notice Creates the Producer contract and stores its address and txn receipt\n @return Returns the address of the Producer contract created"
            },
            "functionSelector": "d0e2539a",
            "id": 711,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 643,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 642,
                  "name": "isNotProducer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 637,
                  "src": "1234:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1234:13:3"
              }
            ],
            "name": "createProducer",
            "nameLocation": "1191:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1220:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "1206:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:21:3"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "1256:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1255:9:3"
            },
            "scope": 762,
            "src": "1182:425:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "1743:37:3",
              "statements": [
                {
                  "expression": {
                    "id": 718,
                    "name": "prodAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 606,
                    "src": "1760:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 717,
                  "id": 719,
                  "nodeType": "Return",
                  "src": "1753:20:3"
                }
              ]
            },
            "documentation": {
              "id": 712,
              "nodeType": "StructuredDocumentation",
              "src": "1613:63:3",
              "text": "@notice Returns the list of all Producer contract addresses"
            },
            "functionSelector": "e80a7eb9",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProducers",
            "nameLocation": "1690:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:2:3"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1725:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 714,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1725:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 715,
                    "nodeType": "ArrayTypeName",
                    "src": "1725:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:18:3"
            },
            "scope": 762,
            "src": "1681:99:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "2006:50:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 730,
                      "name": "addressToProdID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "2023:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Producer_$594_$",
                        "typeString": "mapping(address => contract Producer)"
                      }
                    },
                    "id": 732,
                    "indexExpression": {
                      "id": 731,
                      "name": "_prodAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "2039:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2023:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Producer_$594",
                      "typeString": "contract Producer"
                    }
                  },
                  "functionReturnParameters": 729,
                  "id": 733,
                  "nodeType": "Return",
                  "src": "2016:33:3"
                }
              ]
            },
            "documentation": {
              "id": 722,
              "nodeType": "StructuredDocumentation",
              "src": "1786:145:3",
              "text": "@param _prodAddr The user's EOA address\n @notice Given an EOA address, it returns the corresponding Producer contract creation receipt"
            },
            "functionSelector": "aab147b2",
            "id": 735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProducer",
            "nameLocation": "1945:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "_prodAddr",
                  "nameLocation": "1965:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "1957:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1956:19:3"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "1996:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Producer_$594",
                    "typeString": "contract Producer"
                  },
                  "typeName": {
                    "id": 727,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 726,
                      "name": "Producer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 594,
                      "src": "1996:8:3"
                    },
                    "referencedDeclaration": 594,
                    "src": "1996:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Producer_$594",
                      "typeString": "contract Producer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1995:10:3"
            },
            "scope": 762,
            "src": "1936:120:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 747,
              "nodeType": "Block",
              "src": "2278:52:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 743,
                      "name": "producerExistsMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "2295:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 745,
                    "indexExpression": {
                      "id": 744,
                      "name": "_producer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
                      "src": "2313:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2295:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 742,
                  "id": 746,
                  "nodeType": "Return",
                  "src": "2288:35:3"
                }
              ]
            },
            "documentation": {
              "id": 736,
              "nodeType": "StructuredDocumentation",
              "src": "2062:142:3",
              "text": "@param _producer The user's EOA address\n @notice Returns true if this account has already created an address; false if they haven't"
            },
            "functionSelector": "e9e797ac",
            "id": 748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "producerExists",
            "nameLocation": "2218:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "_producer",
                  "nameLocation": "2241:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "2233:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2233:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2232:19:3"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "2272:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:6:3"
            },
            "scope": 762,
            "src": "2209:121:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "2546:47:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 756,
                      "name": "ownerToContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "2563:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 758,
                    "indexExpression": {
                      "id": 757,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "2579:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2563:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 755,
                  "id": 759,
                  "nodeType": "Return",
                  "src": "2556:30:3"
                }
              ]
            },
            "documentation": {
              "id": 749,
              "nodeType": "StructuredDocumentation",
              "src": "2336:133:3",
              "text": "@param _owner The user's EOA address\n @notice Given an EOA address, it returns the corresponding Producer contract address"
            },
            "functionSelector": "ff25058f",
            "id": 761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnersContract",
            "nameLocation": "2483:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2509:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "2501:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2500:16:3"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "2537:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2536:9:3"
            },
            "scope": 762,
            "src": "2474:119:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 763,
        "src": "290:2307:3",
        "usedErrors": []
      }
    ],
    "src": "32:2565:3"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ProducerFactory.sol",
    "exportedSymbols": {
      "Context": [
        126
      ],
      "Ownable": [
        104
      ],
      "Producer": [
        594
      ],
      "ProducerFactory": [
        762
      ]
    },
    "id": 763,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 596,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "project:/contracts/Producer.sol",
        "file": "./Producer.sol",
        "id": 597,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 763,
        "sourceUnit": 595,
        "src": "57:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ProducerFactory",
        "contractDependencies": [
          594
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 598,
          "nodeType": "StructuredDocumentation",
          "src": "83:207:3",
          "text": "@title A contract to get create and retrieve 'Producers'\n @author Anthony Khoshrozeh\n @notice You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts"
        },
        "fullyImplemented": true,
        "id": 762,
        "linearizedBaseContracts": [
          762
        ],
        "name": "ProducerFactory",
        "nameLocation": "299:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 602,
            "mutability": "mutable",
            "name": "producers",
            "nameLocation": "332:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "321:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Producer_$594_$dyn_storage",
              "typeString": "contract Producer[]"
            },
            "typeName": {
              "baseType": {
                "id": 600,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 599,
                  "name": "Producer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 594,
                  "src": "321:8:3"
                },
                "referencedDeclaration": 594,
                "src": "321:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Producer_$594",
                  "typeString": "contract Producer"
                }
              },
              "id": 601,
              "nodeType": "ArrayTypeName",
              "src": "321:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Producer_$594_$dyn_storage_ptr",
                "typeString": "contract Producer[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 603,
              "nodeType": "StructuredDocumentation",
              "src": "348:69:3",
              "text": "@notice This array contains all contract addresses of 'Producers'"
            },
            "functionSelector": "bf78e36f",
            "id": 606,
            "mutability": "mutable",
            "name": "prodAddresses",
            "nameLocation": "439:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "422:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 604,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "422:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 605,
              "nodeType": "ArrayTypeName",
              "src": "422:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 611,
            "mutability": "mutable",
            "name": "addressToProdID",
            "nameLocation": "497:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "459:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Producer_$594_$",
              "typeString": "mapping(address => contract Producer)"
            },
            "typeName": {
              "id": 610,
              "keyType": {
                "id": 607,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "468:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "459:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Producer_$594_$",
                "typeString": "mapping(address => contract Producer)"
              },
              "valueType": {
                "id": 609,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 608,
                  "name": "Producer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 594,
                  "src": "479:8:3"
                },
                "referencedDeclaration": 594,
                "src": "479:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Producer_$594",
                  "typeString": "contract Producer"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 615,
            "mutability": "mutable",
            "name": "producerExistsMap",
            "nameLocation": "552:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "518:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 614,
              "keyType": {
                "id": 612,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "518:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 613,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "538:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 619,
            "mutability": "mutable",
            "name": "ownerToContract",
            "nameLocation": "612:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 762,
            "src": "575:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 618,
              "keyType": {
                "id": 616,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "584:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "575:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 617,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "595:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 620,
              "nodeType": "StructuredDocumentation",
              "src": "634:161:3",
              "text": "@param owner The owner of the contract\n @notice You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts"
            },
            "id": 624,
            "name": "ProducerCreated",
            "nameLocation": "806:15:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "830:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "822:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:15:3"
            },
            "src": "800:37:3"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "868:75:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 627,
                            "name": "producerExistsMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "886:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 630,
                          "indexExpression": {
                            "expression": {
                              "id": 628,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "904:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "904:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "886:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "919:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "886:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "878:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "878:47:3"
                },
                {
                  "id": 635,
                  "nodeType": "PlaceholderStatement",
                  "src": "935:1:3"
                }
              ]
            },
            "id": 637,
            "name": "isNotProducer",
            "nameLocation": "852:13:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:3"
            },
            "src": "843:100:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 710,
              "nodeType": "Block",
              "src": "1264:343:3",
              "statements": [
                {
                  "assignments": [
                    649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 649,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "1283:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 710,
                      "src": "1274:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Producer_$594",
                        "typeString": "contract Producer"
                      },
                      "typeName": {
                        "id": 648,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 647,
                          "name": "Producer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 594,
                          "src": "1274:8:3"
                        },
                        "referencedDeclaration": 594,
                        "src": "1274:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 660,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 653,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "1300:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 656,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1315:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1315:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1307:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 654,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1307:8:3",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1307:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1287:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_payable_$returns$_t_contract$_Producer_$594_$",
                        "typeString": "function (string memory,address payable) returns (contract Producer)"
                      },
                      "typeName": {
                        "id": 651,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 650,
                          "name": "Producer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 594,
                          "src": "1291:8:3"
                        },
                        "referencedDeclaration": 594,
                        "src": "1291:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Producer_$594",
                      "typeString": "contract Producer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1274:53:3"
                },
                {
                  "expression": {
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 661,
                        "name": "addressToProdID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "1337:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Producer_$594_$",
                          "typeString": "mapping(address => contract Producer)"
                        }
                      },
                      "id": 664,
                      "indexExpression": {
                        "expression": {
                          "id": 662,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1353:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1353:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1337:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Producer_$594",
                        "typeString": "contract Producer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 665,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "1367:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Producer_$594",
                        "typeString": "contract Producer"
                      }
                    },
                    "src": "1337:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Producer_$594",
                      "typeString": "contract Producer"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:31:3"
                },
                {
                  "expression": {
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 668,
                        "name": "ownerToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "1378:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 671,
                      "indexExpression": {
                        "expression": {
                          "id": 669,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1394:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1394:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1378:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 674,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 649,
                          "src": "1416:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Producer_$594",
                            "typeString": "contract Producer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Producer_$594",
                            "typeString": "contract Producer"
                          }
                        ],
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1408:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1408:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1408:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1378:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:40:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 683,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "1455:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Producer_$594",
                              "typeString": "contract Producer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Producer_$594",
                              "typeString": "contract Producer"
                            }
                          ],
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1447:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1447:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1447:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 678,
                        "name": "prodAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "1428:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1428:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 690,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "1483:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      ],
                      "expression": {
                        "id": 687,
                        "name": "producers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1468:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Producer_$594_$dyn_storage",
                          "typeString": "contract Producer[] storage ref"
                        }
                      },
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1468:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Producer_$594_$dyn_storage_ptr_$_t_contract$_Producer_$594_$returns$__$bound_to$_t_array$_t_contract$_Producer_$594_$dyn_storage_ptr_$",
                        "typeString": "function (contract Producer[] storage pointer,contract Producer)"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1468:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "1468:17:3"
                },
                {
                  "expression": {
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 693,
                        "name": "producerExistsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "1495:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 696,
                      "indexExpression": {
                        "expression": {
                          "id": 694,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1513:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1513:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1495:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1527:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1495:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "1495:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 701,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1562:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1562:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 700,
                      "name": "ProducerCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 624,
                      "src": "1546:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "EmitStatement",
                  "src": "1541:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 707,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "1598:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Producer_$594",
                          "typeString": "contract Producer"
                        }
                      ],
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1590:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1590:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 709,
                  "nodeType": "Return",
                  "src": "1583:17:3"
                }
              ]
            },
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "949:228:3",
              "text": "@param _name The name of the Producer; equivalent to the artist's name\n @notice Creates the Producer contract and stores its address and txn receipt\n @return Returns the address of the Producer contract created"
            },
            "functionSelector": "d0e2539a",
            "id": 711,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 643,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 642,
                  "name": "isNotProducer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 637,
                  "src": "1234:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1234:13:3"
              }
            ],
            "name": "createProducer",
            "nameLocation": "1191:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1220:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "1206:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:21:3"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "1256:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1255:9:3"
            },
            "scope": 762,
            "src": "1182:425:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "1743:37:3",
              "statements": [
                {
                  "expression": {
                    "id": 718,
                    "name": "prodAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 606,
                    "src": "1760:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 717,
                  "id": 719,
                  "nodeType": "Return",
                  "src": "1753:20:3"
                }
              ]
            },
            "documentation": {
              "id": 712,
              "nodeType": "StructuredDocumentation",
              "src": "1613:63:3",
              "text": "@notice Returns the list of all Producer contract addresses"
            },
            "functionSelector": "e80a7eb9",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProducers",
            "nameLocation": "1690:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:2:3"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "1725:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 714,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1725:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 715,
                    "nodeType": "ArrayTypeName",
                    "src": "1725:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:18:3"
            },
            "scope": 762,
            "src": "1681:99:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "2006:50:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 730,
                      "name": "addressToProdID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "2023:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Producer_$594_$",
                        "typeString": "mapping(address => contract Producer)"
                      }
                    },
                    "id": 732,
                    "indexExpression": {
                      "id": 731,
                      "name": "_prodAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "2039:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2023:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Producer_$594",
                      "typeString": "contract Producer"
                    }
                  },
                  "functionReturnParameters": 729,
                  "id": 733,
                  "nodeType": "Return",
                  "src": "2016:33:3"
                }
              ]
            },
            "documentation": {
              "id": 722,
              "nodeType": "StructuredDocumentation",
              "src": "1786:145:3",
              "text": "@param _prodAddr The user's EOA address\n @notice Given an EOA address, it returns the corresponding Producer contract creation receipt"
            },
            "functionSelector": "aab147b2",
            "id": 735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProducer",
            "nameLocation": "1945:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "_prodAddr",
                  "nameLocation": "1965:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "1957:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1956:19:3"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "1996:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Producer_$594",
                    "typeString": "contract Producer"
                  },
                  "typeName": {
                    "id": 727,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 726,
                      "name": "Producer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 594,
                      "src": "1996:8:3"
                    },
                    "referencedDeclaration": 594,
                    "src": "1996:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Producer_$594",
                      "typeString": "contract Producer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1995:10:3"
            },
            "scope": 762,
            "src": "1936:120:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 747,
              "nodeType": "Block",
              "src": "2278:52:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 743,
                      "name": "producerExistsMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "2295:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 745,
                    "indexExpression": {
                      "id": 744,
                      "name": "_producer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
                      "src": "2313:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2295:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 742,
                  "id": 746,
                  "nodeType": "Return",
                  "src": "2288:35:3"
                }
              ]
            },
            "documentation": {
              "id": 736,
              "nodeType": "StructuredDocumentation",
              "src": "2062:142:3",
              "text": "@param _producer The user's EOA address\n @notice Returns true if this account has already created an address; false if they haven't"
            },
            "functionSelector": "e9e797ac",
            "id": 748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "producerExists",
            "nameLocation": "2218:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "_producer",
                  "nameLocation": "2241:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "2233:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2233:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2232:19:3"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "2272:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:6:3"
            },
            "scope": 762,
            "src": "2209:121:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "2546:47:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 756,
                      "name": "ownerToContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "2563:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 758,
                    "indexExpression": {
                      "id": 757,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "2579:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2563:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 755,
                  "id": 759,
                  "nodeType": "Return",
                  "src": "2556:30:3"
                }
              ]
            },
            "documentation": {
              "id": 749,
              "nodeType": "StructuredDocumentation",
              "src": "2336:133:3",
              "text": "@param _owner The user's EOA address\n @notice Given an EOA address, it returns the corresponding Producer contract address"
            },
            "functionSelector": "ff25058f",
            "id": 761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnersContract",
            "nameLocation": "2483:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2509:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "2501:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2500:16:3"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "2537:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2536:9:3"
            },
            "scope": 762,
            "src": "2474:119:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 763,
        "src": "290:2307:3",
        "usedErrors": []
      }
    ],
    "src": "32:2565:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xaaDb1F4521e940ae2853448A5bC4022d2b59d9DC",
      "transactionHash": "0xf14de7e534e49c67bbe26d05db8336513d2524a24f0f588a7d606cb4f1052b3b"
    },
    "1337": {
      "events": {},
      "links": {},
      "address": "0xAa78D6632bEcC84C9C00986e56261C20d1B0CFFC",
      "transactionHash": "0x80010c2157bf399250c846f91e87e4fff68f2cd7097a5630c0fd46f499ed1b9a"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xeF543B4DB03d9ed50Ea44AD87F7A5b00B0b50EB6",
      "transactionHash": "0x0e1476ddf75c1b5058fe0a8a03277158b3a960c22df67c6a182aed0c2eb8e59e"
    },
    "1639370232148": {
      "events": {},
      "links": {},
      "address": "0x97Bc2ee498A16fcc994b0bf0B9c04E80A93F350b",
      "transactionHash": "0xd429ce4ec5373cb87f1656fa553238e5a83aa36458e67ccf7d36b752e8bb2aed"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-15T21:39:26.201Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Anthony Khoshrozeh",
    "events": {
      "ProducerCreated(address)": {
        "params": {
          "owner": "The owner of the contract"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "createProducer(string)": {
        "params": {
          "_name": "The name of the Producer; equivalent to the artist's name"
        },
        "returns": {
          "_0": "Returns the address of the Producer contract created"
        }
      },
      "getOwnersContract(address)": {
        "params": {
          "_owner": "The user's EOA address"
        }
      },
      "getProducer(address)": {
        "params": {
          "_prodAddr": "The user's EOA address"
        }
      },
      "producerExists(address)": {
        "params": {
          "_producer": "The user's EOA address"
        }
      }
    },
    "title": "A contract to get create and retrieve 'Producers'",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ProducerCreated(address)": {
        "notice": "You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts"
      }
    },
    "kind": "user",
    "methods": {
      "createProducer(string)": {
        "notice": "Creates the Producer contract and stores its address and txn receipt"
      },
      "getOwnersContract(address)": {
        "notice": "Given an EOA address, it returns the corresponding Producer contract address"
      },
      "getProducer(address)": {
        "notice": "Given an EOA address, it returns the corresponding Producer contract creation receipt"
      },
      "getProducers()": {
        "notice": "Returns the list of all Producer contract addresses"
      },
      "prodAddresses(uint256)": {
        "notice": "This array contains all contract addresses of 'Producers'"
      },
      "producerExists(address)": {
        "notice": "Returns true if this account has already created an address; false if they haven't"
      }
    },
    "notice": "You can use this contract to dynamically create 'Producer' contracts and retrieve 'Producer' contracts",
    "version": 1
  }
}